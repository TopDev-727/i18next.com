// Generated by CoffeeScript 1.9.3
var decamelize, generateFontFaceRules, generateHeaderStyles, gray, isString, ms, normalize;

ms = require('modularscale');

normalize = require('../normalize');

gray = require('gray-percentage');

isString = require('is-string');

decamelize = require('decamelize');

generateHeaderStyles = function(vr, options) {
  var baseFontSize, h1, h2, h3, h4, h5, h6, i, len, maxWidth, modularScale, ref, scale, styles;
  styles = "";
  baseFontSize = options.baseFontSize.slice(0, -2);
  ref = options.modularScales;
  for (i = 0, len = ref.length; i < len; i++) {
    modularScale = ref[i];
    if (isString(modularScale)) {
      maxWidth = false;
      scale = modularScale;
    } else {
      maxWidth = "@media only screen and (max-width: " + modularScale[0] + ") {\n";
      scale = modularScale[1];
    }
    h1 = vr.adjustFontSizeTo(ms(3, scale) * baseFontSize + "px");
    h2 = vr.adjustFontSizeTo(ms(2, scale) * baseFontSize + "px");
    h3 = vr.adjustFontSizeTo(ms(1, scale) * baseFontSize + "px");
    h4 = vr.adjustFontSizeTo(ms(2 / 3, scale) * baseFontSize + "px");
    h5 = vr.adjustFontSizeTo(ms(1 / 3, scale) * baseFontSize + "px");
    h6 = vr.adjustFontSizeTo(ms(0, scale) * baseFontSize + "px");
    if (maxWidth) {
      styles += maxWidth;
    }
    styles += "h1 {\n  font-size: " + h1.fontSize + ";\n  line-height: " + h1.lineHeight + ";\n}\n\nh2 {\n  font-size: " + h2.fontSize + ";\n  line-height: " + h2.lineHeight + ";\n}\n\nh3 {\n  font-size: " + h3.fontSize + ";\n  line-height: " + h3.lineHeight + ";\n}\n\nh4 {\n  font-size: " + h4.fontSize + ";\n  line-height: " + h4.lineHeight + ";\n}\n\nh5 {\n  font-size: " + h5.fontSize + ";\n  line-height: " + h5.lineHeight + ";\n}\n\nh6 {\n  font-size: " + h6.fontSize + ";\n  line-height: " + h6.lineHeight + ";\n}";
    if (maxWidth) {
      styles += "}\n";
    }
  }
  return styles;
};

generateFontFaceRules = function(vr, options) {
  var fontFace, i, k, len, properties, ref, s, srcs, styles, v;
  styles = "";
  properties = "";
  if (!(options.fontFaces.length > 0)) {
    return styles;
  }
  ref = options.fontFaces;
  for (i = 0, len = ref.length; i < len; i++) {
    fontFace = ref[i];
    srcs = (function() {
      var j, len1, ref1, results;
      ref1 = fontFace.src;
      results = [];
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        s = ref1[j];
        results.push("src: " + s + ";");
      }
      return results;
    })();
    for (k in fontFace) {
      v = fontFace[k];
      if (k !== "src") {
        properties += (decamelize(k, '-')) + ": " + v + ";\n";
      }
    }
    styles += "@font-face {\n  " + properties + "\n  " + (srcs.join("\n")) + "\n}";
  }
  return styles;
};

module.exports = function(vr, options) {
  var styles;
  styles = normalize + "\n\nhtml {\n  box-sizing: border-box;\n  font-size: " + (vr.establishBaseline().fontSize) + ";\n  line-height: " + (vr.establishBaseline().lineHeight) + ";\n  overflow-y: scroll;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  color: " + (gray(options.bodyGray, options.bodyGrayHue)) + ";\n  font-family: " + options.bodyFontFamily + ";\n  font-weight: " + options.bodyWeight + ";\n  word-wrap: break-word;\n}\n\n/* Make image responsive by default */\nimg {\n  max-width: 100%;\n}\n\n/* All block elements get one rhythm of bottom margin. */\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhgroup,\nul,\nol,\ndl,\ndd,\np,\nfigure,\npre,\ntable,\nfieldset,\nblockquote,\nform,\nnoscript,\niframe,\nimg,\nhr {\n  margin: 0;\n  margin-bottom: " + (vr.rhythm(1)) + ";\n  padding: 0;\n}\n\nblockquote {\n  margin: " + (vr.rhythm(1)) + " " + (vr.rhythm(2.5)) + ";\n}\n\nb,\nstrong {\n  font-weight: " + options.boldWeight + "\n}\n\nhr {\n  background: " + (gray(80, options.bodyGrayHue)) + ";\n  border: none;\n  height: 1px;\n  margin-bottom: calc(" + (vr.rhythm(1)) + " - 1px);\n}\n\nol,\nul {\n  list-style-position: outside;\n  margin-left: " + (vr.rhythm(1)) + ";\n}\n\nul li,\nol li {\n  padding-left: 0;\n}\n\ncode,\nkbd,\npre,\nsamp {\n  font-size: " + (vr.adjustFontSizeTo('85%').fontSize) + ";\n  line-height: " + (vr.adjustFontSizeTo('85%').lineHeight) + ";\n}\n\ntable {\n  font-size: " + (vr.adjustFontSizeTo(options.baseFontSize).fontSize) + ";\n  line-height: " + (vr.adjustFontSizeTo(options.baseLineHeight).lineHeight) + ";\n  width: 100%;\n}\n\nthead {\n  text-align: left;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  color: " + (gray(options.headerGray, options.headerGrayHue)) + ";\n  font-family: " + options.headerFontFamily + ";\n  font-weight: " + options.headerWeight + ";\n}\n\n" + (generateHeaderStyles(vr, options)) + "\n" + (generateFontFaceRules(vr, options));
  return styles;
};
